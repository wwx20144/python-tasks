# -*- coding: utf-8 -*-
"""string.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/136GgL-QuNGD3b1o8NrDi1so5gizRvntK

1. 1. Write a Python program to calculate the length of a string.
"""

string = "teststring"
string_length = len(string)
print(string_length)

"""2. Write a Python program to count the number of characters (character frequency) in a string."""

firstdict = {}
firststring = "teststring"
for x in firststring:
    keys = firstdict.keys()
    if x in keys:
        firstdict[x] += 1
    else:
        firstdict[x] = 1
print(firstdict)

"""3. Write a Python program to get a string made of the first 2 and last 2 characters of a given string. If the string length is less than 2, return the empty string instead."""

firststring = "teststring"

if len(firststring) < 2:
    secondstring = ""
else:
    secondstring = firststring[0:2] + firststring[-2:]
print(secondstring)

"""4. Write a Python program to get a string from a given string where all occurrences of its first char have been changed to '$', except the first char itself."""

firststring = "teststring"
firstchar = firststring[0]
secondstring = firststring.replace(firstchar, "$")
firststring = firstchar + secondstring[1:]
print(firststring)

"""5. Write a Python program to get a single string from two given strings, separated by a space and swap the first two characters of each string."""

def charswap(a, b):
    a1 = b[:2] + a[2:]
    b1 = a[:2] + b[2:]
    return a1 + " " + b1
charswap("mixed", "string")

"""6. Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing', add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged."""

one = "test"
oneend = one[-3:]
if oneend == "ing":
    print(one)
else:
    two = one + "ing"
    print(two)

"""7. Write a Python program to find the first appearance of the substrings 'not' and 'poor' in a given string. If 'not' follows 'poor', replace the whole 'not'...'poor' substring with 'good'. Return the resulting string."""

one = "123 not poor"
onenot = one.find("not")
onepoor = one.find("poor")
if onepoor > onenot and onenot > 0 and onepoor > 0:
    one = one.replace(one[onenot:(onepoor+4)], "good")
    print(one)
else:
    print(one)

"""8. Write a Python function that takes a list of words and return the longest word and the length of the longest one."""

string = "short longword thelonsgestword thblongestword"
stringsplit = string.split()
stringtable = []
for x in stringsplit:
  strlen = len(x)
  strtuple = (x, strlen)
  stringtable.append(strtuple)
highest = max(stringtable)
maxstr = highest[0]
maxval = highest[1]
print("the longest word: ", maxstr, " length:", maxval)

"""9. Write a Python program to remove the nth index character from a nonempty string."""

string = "example"
n = 5
newstring = string[0:n] + string[n+1:]
print(newstring)

"""10. Write a Python program to change a given string to a newly string where the first and last chars have been exchanged."""

oldchar = "im old char"
newchar = "the char new"

oldchar1 = newchar[:1] + oldchar[1:-1] + newchar[-1:]
newchar1 = oldchar[:1] + newchar[1:] + oldchar[-1:]
print(oldchar1, newchar1)

"""11. Write a Python program to remove characters that have odd index values in a given string."""

string = "example char"
n = ""
for x in range(len(string)):
  if x % 2 == 0:
    n = n + string[x]
print(n)

"""12. Write a Python program to count the occurrences of each word in a given sentence."""

string = "hello one hello two hello two hello s"
stringdict = {}
stringsplit = string.split()
for x in stringsplit:
  if x in stringdict:
    stringdict[x] += 1
  else:
    stringdict[x] = 1
print(stringdict)

"""13. Write a Python script that takes input from the user and displays that input back in upper and lower cases."""

string = input()
print(string.upper(), string.lower())

"""14. Write a Python program to lowercase the first n characters in a string."""

string = "TESTSTRING"
n = 4
chars = string[:n]
newstring = chars.lower() + string[n:]
print(newstring)

"""15. Write a Python function to create an HTML string with tags around the word(s)."""

def html(tag, string):
  return "<" + tag + ">" + string + "</" + tag + ">"
print(html("p", "this is a paragraph"))

"""16. Write a Python program to convert a given string into a list of words."""

string = "this is an example string"
strlist = string.split(" ")
print(strlist)

"""17. Write a Python program to lowercase the first n characters in a string."""

string = "LOWERCASE THIS STRING"
n = 4
lower = string.lower()[:n] + string[n:]
print(lower)

"""18. Write a Python program to delete all occurrences of a specified character in a given string."""

string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
char = "o"
newlist = []
newstring = ""
for n in string:
  if n != char:
    newlist.append(n)
newstring = ''.join(newlist)
print(newstring)

"""19. Write a Python program to count repeated characters in a string.
Sample string: 'thequickbrownfoxjumpsoverthelazydog'
Expected output:

```
o 4
e 3
u 2
h 2
r 2
t 2
```


"""

firstdict = {}
firststring = "thequickbrownfoxjumpsoverthelazydog"
for x in firststring:
    keys = firstdict.keys()
    if x in keys:
        firstdict[x] += 1
    else:
        firstdict[x] = 1
for n in firstdict:
  if firstdict[n] > 1:
    print(n, firstdict[n])

"""20. Write a Python program to print the index of a character in a string.
Sample string: w3resource
Expected output:
```
Current character w position at 0
Current character 3 position at 1
Current character r position at 2
[...]
Current character c position at 8
Current character e position at 9
```
"""

string = "string"
for index, x in enumerate(string):
  print("Current character", x, "position at", index)