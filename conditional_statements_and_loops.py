# -*- coding: utf-8 -*-
"""Conditional Statements and loops.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16xveM2ooODcxy0dcnbYJOJzkHbBqhXRv

1. Write a Python program to find those numbers which are divisible by 7 and multiples of 5, between 1500 and 2700 (both included).
"""

table = []
for i in range(1500, 2700):
  if i % 7 == 0 and i % 5 == 0:
    table.append(i)
print(table)

""" 2. Write a Python program to convert temperatures to and from Celsius and Fahrenheit."""

choice = input("Celsius(C) or Fahrenheit(F):")
if choice == "C":
  celc = int(input("provide temperature in Celsius:"))
  print((9/5) * celc + 32)
elif choice == "F":
  fahr = int(input("provide temperature in Fahrenheit:"))
  print((5/9) * (fahr - 32))
else:
  print("invalid choice!")

"""3. Write a Python program to guess a number between 1 and 9."""

import random
x = random.randint(1, 9)

while True:
  userinput = int(input("guess my number:"))
  if userinput == x:
    print("Congrats! That was my number.")
    break
  else:
    userinput = input("Sorry. Try again.")

"""4. Write a Python program to construct the following pattern, using a nested for loop.

```
*
* *
* * *
* * * *
* * * * *
* * * *
* * *
* *
*
```

"""

for i in range(5):
  for j in range(i):
    print("*", end="")
  print("")
for i in range(5, 0, -1):
  for j in range(i):
    print("*", end="")
  print("")

"""5. Write a Python program that accepts a word from the user and reverses it."""

x = str(input("word to reverse:"))
n = []
for i in x:
  n.append(i)
n.reverse()
reversed = ''.join(n)
print(reversed)

"""6. Write a Python program to count the number of even and odd numbers in a series of numbers"""

numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
odd = []
even = []
for i in numbers:
  if i % 2 == 0:
    even.append(i)
  else:
    odd.append(i)
print("even numbers:", len(even), "odd numbers:", len(odd))

"""7. Write a Python program that prints each item and its corresponding type from the following list.
Sample List : datalist = [1452, 11.23, 1+2j, True, 'w3resource', (0, -1), [5, 12], {"class":'V', "section":'A'}]
"""

datalist = [1452, 11.23, 1+2j, True, 'w3resource', (0, -1), [5, 12], {"class":'V', "section":'A'}]
for x in datalist:
  print("item:", x, "type:", type(x))

"""8. Write a Python program that prints all the numbers from 0 to 6 except 3 and 6."""

for i in range(6):
  if i != 3 and i != 6:
    print(i)

"""9. Write a Python program to get the Fibonacci series between 0 and 50."""

a = 0
b = 1
for i in range(50):
  if a <= 50:
    print(a)
    a, b = b, a + b

"""10. Write a Python program that iterates the integers from 1 to 50. For multiples of three print "Fizz" instead of the number and for multiples of five print "Buzz". For numbers that are multiples of three and five, print "FizzBuzz"."""

for i in range(51):
  if i % 3 == 0 and i % 5 == 0:
    print("FizzBuzz")
  elif i % 3 == 0:
    print("Fizz")
  elif i % 5 == 0:
    print("Buzz")
  else:
    print(i)

"""11. Write a Python program that accepts a sequence of lines (blank line to terminate) as input and prints the lines as output (all characters in lower case)."""

string = []
while True:
  char = input("type a char(leave blank to stop):")
  if char != "":
    string.append(char)
  else:
    break
finalstring = ''.join(string)
print(finalstring)

"""12. Write a Python program that accepts a sequence of comma separated 4 digit binary numbers as its input. The program will print the numbers that are divisible by 5 in a comma separated sequence."""

string = input("provide a binary number(use comma to separate multiple numbers):")
dec = 0
val = 0
power = 4
strlist = string.split(",")
for x in strlist:
  val = int(x, 2)
  if val % 5 == 0:
    print(x)

"""13. Write a Python program that accepts a string and calculates the number of digits and letters."""

string = input()
a = 0
b = 0
for x in string:
  if x.isdigit():
    a += 1
  elif x.isalpha():
    b += 1
print("digits:", a, "letters:", b)

"""14. Write a Python program to check the validity of passwords input by users.
Validation :

    At least 1 letter between [a-z] and 1 letter between [A-Z].
    At least 1 number between [0-9].
    At least 1 character from [$#@].
    Minimum length 6 characters.
    Maximum length 16 characters.

"""

password = input("provide a password:")
length = len(password)
specialchars = "$#@"
mask = {"lowercase": 0, "uppercase": 0, "number": 0, "character": 0}
for x in password:
  if x.isdigit():
    mask["number"] += 1
  elif x.islower():
    mask['lowercase'] += 1
  elif x.isupper():
    mask['uppercase'] += 1
  elif x in specialchars:
    mask["character"] += 1
if (mask["number"] > 0 and mask["lowercase"] > 0 and mask["uppercase"] > 0 and mask["character"] > 0 and 6 < length < 16):
  print("valid password")
else:
  print("invalid pasword")

"""15. Write a Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even number. The numbers obtained should be printed in a comma-separated sequence"""

numbers = []
for i in range(100, 401):
    is_even = True
    for j in str(i):
        if int(j) % 2 != 0:
            is_even = False
            break
    if is_even:
        numbers.append(i)
print(numbers)

"""16. Write a Python program to calculate a dog's age in dog years.
Note: For the first two years, a dog year is equal to 10.5 human years. After that, each dog year equals 4 human years.
"""

human_age = float(input("input dog's age in human age:"))
dog_age = 10.5
if human_age <= 2:
  dog_age = human_age * 10.5
else:
  dog_age = 21 + (human_age - 2) * 4
print(dog_age)

"""17. Write a Python program that checks whether a string represents an integer or not."""

string = input("input a string:")
is_int = string.isalnum()
if is_int:
  print("it's an integer")
if is_int == False:
  print("it's not an integer")

"""18. Write a Python program to find the median of three values."""

numbers = []
for i in range(3):
  numbers.append(int(input("input a number:")))
final = (numbers[0] + numbers[1] + numbers[2]) / 3
print(final)

"""19. Write a Python program to create the multiplication table (from 1 to 10) of a number."""

number = int(input("input a number:"))
for i in range(1, 11):
  equals = number * i
  print(number, "x", i, "=", equals)

"""20. Write a Python program to construct the following pattern, using a nested loop number."""

for i in range(1,10):
  for j in range(i):
    print(i, end="")
  print()